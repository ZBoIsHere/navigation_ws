<?xml version="1.0"?>
<launch>

<!-- vlp16 -->
<group>
<!-- declare arguments with default values -->
    <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
    <arg name="device_ip" default="192.168.1.201" />
    <arg name="frame_id" default="velodyne" />
    <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
    <arg name="max_range" default="130.0" />
    <arg name="min_range" default="0.4" />
    <arg name="pcap" default="" />
    <arg name="port" default="2368" />
    <arg name="read_fast" default="false" />
    <arg name="read_once" default="false" />
    <arg name="repeat_delay" default="0.0" />
    <arg name="rpm" default="600.0" />
    <arg name="cut_angle" default="-0.01" />
    <arg name="laserscan_ring" default="-1" />
    <arg name="laserscan_resolution" default="0.007" />

    <!-- start nodelet manager and driver nodelets -->
    <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
      <arg name="device_ip" value="$(arg device_ip)"/>
      <arg name="frame_id" value="$(arg frame_id)"/>
      <arg name="manager" value="$(arg manager)" />
      <arg name="model" value="VLP16"/>
      <arg name="pcap" value="$(arg pcap)"/>
      <arg name="port" value="$(arg port)"/>
      <arg name="read_fast" value="$(arg read_fast)"/>
      <arg name="read_once" value="$(arg read_once)"/>
      <arg name="repeat_delay" value="$(arg repeat_delay)"/>
      <arg name="rpm" value="$(arg rpm)"/>
    </include>

    <!-- start cloud nodelet -->
    <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
      <arg name="calibration" value="$(arg calibration)"/>
      <arg name="manager" value="$(arg manager)" />
      <arg name="max_range" value="$(arg max_range)"/>
      <arg name="min_range" value="$(arg min_range)"/>
    </include>

    <!-- start laserscan nodelet -->
    <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
        <arg name="manager" value="$(arg manager)" />
        <arg name="ring" value="$(arg laserscan_ring)"/>
        <arg name="resolution" value="$(arg laserscan_resolution)"/>
    </include>
</group>

<group>
    <!--<arg name="device" default="auto" doc="device file of the IMU"/>
    <arg name="baudrate" default="0" doc="baudrate of the IMU"/>
    <arg name="timeout" default="0.002" doc="timeout for the IMU communication"/>
    <arg name="frame_id" default="/imu" doc="frame id of the IMU"/>
    <arg name="frame_local" default="ENU" doc="desired frame orientation (ENU, NED or NWU)"/>
    <arg name="no_rotation_duration" default="0" doc="duration (int in seconds) of the no-rotation calibration procedure"/>

    <node pkg="xsens_driver" type="mtnode.py" name="xsens_driver" output="screen" >
        <param name="device" value="$(arg device)"/>
        <param name="baudrate" value="$(arg baudrate)"/>
        <param name="timeout" value="$(arg timeout)"/>
        <param name="frame_id" value="$(arg frame_id)"/>
        <param name="frame_local" value="$(arg frame_local)"/>
        <param name="no_rotation_duration" value="$(arg no_rotation_duration)"/>
    </node>-->
</group>
    
    <node pkg="receive_xsens" type="receive_xsens" name="receive_xsens" output="screen" />
    <node pkg="receive_stm32" type="stm32_serial" name="stm32_serial" output="screen" >
	    <param name="port"      type="string" value="/dev/ttyUSB1"/>
        <param name="baudrate"  type="int"    value="115200"/>
	</node>

</launch>
