
<launch>
	<!-- Some general parameters -->
    <param name="use_sim_time" value="false" />
    
	<rosparam file="$(find csc_nav2d_working)/param/ros.yaml"/>

	<!-- Start the Navigator to move the robot autonomously   包含了地图操作工具与整个全局路径规划、局部路径规划的内容 -->
    <node pkg="csc_nav2d_navigator" type="navigator" name="Navigator" >
        <rosparam file="$(find csc_nav2d_working)/param/navigator.yaml"/>
        <rosparam file="$(find csc_nav2d_working)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find csc_nav2d_working)/param/global_costmap_params_scan_rs.yaml" command="load" />
	</node>

    <node pkg="csc_nav2d_navigator" type="ObstaclesDetect" name="ObstaclesDetect" >
        <param name="danger_range" value="0.3"/>
        <param name="region_radius" value="1"/>
    </node>

	<node pkg="csc_nav2d_navigator" type="set_goal_client" name="SetGoal" output="screen" />

	<!-- Start the Operator to control the simulated robot 将自定义的导航输出数据转化为ros通用的格式，并限制幅度。-->
	<node pkg="csc_nav2d_operator" type="operator"  name="Operator" >
		<remap from="scan" to="scan"/>
		<rosparam file="$(find csc_nav2d_working)/param/operator.yaml"/>
	</node>

    <!-- <node pkg="csc_nav2d_working" type="autoNavigate.py" output="screen" name="autoNavigation" >
        <rosparam file="$(find csc_nav2d_working)/param/autoNavigate_goal.yaml"/>
    </node>-->
    

</launch>
