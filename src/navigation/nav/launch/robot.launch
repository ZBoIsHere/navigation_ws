<launch>
  <arg name="robot_type" default="MINI" />
  <arg name="lidar_type" default="velodyne" />
  <arg name="enable_driver" default="true" />
  <arg name="enable_rviz" default="false" />
  <arg name="map_id" default="demo" />
  <arg name="mprim_id" default="mprim05" />


  <!-- 驱动 -->
  <group if="$(arg enable_driver)">
    <!-- LIDAR -->
    <group if="$(eval arg('lidar_type') == 'velodyne')">
      <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
        <arg name="device_ip" value="192.168.1.201" />
      </include>
    </group>
    <group if="$(eval arg('lidar_type') == 'rslidar')">
      <include file="$(find rslidar_pointcloud)/launch/rs_lidar_16.launch">
        <arg name="device_ip" value="192.168.1.201" />
      </include>
    </group>
    <!-- 通信 -->
    <include file="$(find message_transformer_cpp)/launch/message_transformer_cpp.launch"/>
  </group>

  <!-- 定位 -->
  <include file="$(find hdl_localization)/launch/hdl_localization.launch">
    <arg name="map_id" value="$(arg map_id)" />
    <arg name="lidar_type" value="$(arg lidar_type)" />
  </include>

  <!-- MINI 参数 -->
  <group if="$(eval arg('robot_type') == 'MINI')">
    <!-- TF 参数 -->
    <group if="$(eval arg('lidar_type') == 'velodyne')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="base_laser_tf_broadcaster" args="0.243 0 0.058 0 0 0 base_link velodyne" />
    </group>
    <group if="$(eval arg('lidar_type') == 'rslidar')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="base_laser_tf_broadcaster" args="0.243 0 0.058 0 0 0 base_link rslidar" />
    </group>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_camera_tf_broadcaster" args="0.309 0 -0.120 0 0.36 0 base_link camera_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_body_tf_broadcaster" args="0.243 0 0.058 -1.57 0 0 base_link body" />
    <!-- URDF -->
    <group if="$(arg enable_rviz)">
      <param name="robot_description" textfile="$(find mini)/urdf/mini.urdf" />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    </group>
    <!-- 导航 -->
    <!-- <include file="$(find pointcloud_to_laserscan)/launch/pointcloud_to_laserscan.launch">
      <arg name="lidar_type" value="$(arg lidar_type)" />
    </include> -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find nav)/map/$(arg map_id).yaml"/>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <!-- 代价地图 -->
      <rosparam file="$(find nav)/config/costmap_common_params_mini.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find nav)/config/costmap_common_params_mini.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find nav)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find nav)/config/global_costmap_params.yaml" command="load" />
      <!-- 轨迹规划 -->
      <rosparam file="$(find sbpl_lattice_planner)/launch/move_base/sbpl_global_params.yaml" command="load" />
      <param name="base_global_planner" value="SBPLLatticePlanner" />
      <param name="SBPLLatticePlanner/primitive_filename" value="$(find sbpl_lattice_planner)/matlab/mprim/$(arg mprim_id).mprim" />
      <param name="planner_frequency" value=".5" />
      <param name="planner_patience" value ="10" />
      <!-- 轨迹控制 -->
      <rosparam file="$(find nav)/config/teb_local_planner_params_mini.yaml" command="load" />
      <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
      <param name="controller_frequency" value="10" />
      <param name="controller_patience" value= "10" />
      <!-- 异常处理 -->
      <param name="recovery_behavior_enabled" value="false" />
    </node>
  </group>


  <!-- JYL 参数 -->
  <group if="$(eval arg('robot_type') == 'JYL')">
    <!-- TF 参数 -->
    <group if="$(eval arg('lidar_type') == 'velodyne')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="base_velodyne_tf_broadcaster" args="0.327 0 0.075 0 0 0 base_link velodyne" />
    </group>
    <group if="$(eval arg('lidar_type') == 'rslidar')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="base_velodyne_tf_broadcaster" args="0.327 0 0.075 0 0 0 base_link rslidar" />
    </group>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_camera_tf_broadcaster" args="0.372 0 -0.018 0 0.4 0 base_link camera_link" />
    <!-- 导航 -->
    <include file="$(find pointcloud_to_laserscan)/launch/pointcloud_to_laserscan.launch">
      <arg name="lidar_type" value="$(arg lidar_type)" />
    </include>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <!-- 代价地图 -->
      <rosparam file="$(find nav)/config/costmap_common_params_jyl.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find nav)/config/costmap_common_params_jyl.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find nav)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find nav)/config/global_costmap_params.yaml" command="load" />
      <!-- 轨迹规划 -->
      <rosparam file="$(find sbpl_lattice_planner)/launch/move_base/sbpl_global_params.yaml" command="load" />
      <param name="base_global_planner" value="SBPLLatticePlanner" />
      <param name="SBPLLatticePlanner/primitive_filename" value="$(find sbpl_lattice_planner)/matlab/mprim/$(arg mprim_id).mprim" />
      <param name="planner_frequency" value="0" />
      <param name="planner_patience" value="10.0" />
      <!-- 轨迹控制 -->
      <rosparam file="$(find nav)/config/teb_local_planner_params_jyl.yaml" command="load" />
      <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
      <param name="controller_frequency" value="10.0" />
      <param name="controller_patience" value="10.0" />
      <!-- 异常处理 -->
      <param name="recovery_behavior_enabled" value="false" />
    </node>
  </group>

  <!-- RViz -->
  <group if="$(arg enable_rviz)">
    <node name="navigation_rviz" pkg="rviz" type="rviz" args=" -d $(find nav)/rviz/nav.rviz" />
  </group>
</launch>